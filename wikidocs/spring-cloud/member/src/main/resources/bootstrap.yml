  # application.yml은 애플리케이션의 '일반 설정' 파일임.
  # 하지만 "Config Server의 주소가 어디인가?"라는 설정은, application.yml을 읽어오기 전에 먼저 알아야 하는 '최우선 설정'.
  # bootstrap.yml은 application.yml보다 먼저 로드되는 '부트스트랩 컨텍스트' 설정 파일

spring:
  application:
    name: member-service # Config Server에 어떤 파일을 요청할지 식별하는 ID
  cloud:
    config:
      # Config Server의 주소
      uri: http://localhost:8888
      # (만약 Config Server가 여러 대라면 fail-fast, retry 등 설정 가능)


#   ======= config 동작 확인  =======
#   1. config-repo Git 저장소에 설정 파일들을 푸시 (여기서는 member-service.yml 파일이 별도의 깃 저장소에 있어야함)
#   2. discovery-service(Eureka)를 실행
#   3. config-service(포트 8888)를 실행
#   4. member-service를 실행


#   ======= 별도의 깃 저장소에 저장된 member-service.yml 설정 내용  =======
#server:
#  port: 8081
#management:
#  endpoints:
#    web:
#      exposure:
#        include: health,info,refresh # 'refresh' 엔드포인트 노출 (05.04절)
